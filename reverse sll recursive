#include<bits/stdc++.h>
using namespace std;

class Node{public: int data;Node* next;Node(int data){this->data=data;this->next=NULL;}~Node(){if(this->next!=NULL){delete next;this->next=NULL;}}};
void iah(Node* &head,int d){Node* nb=new Node(d);nb->next=head;head=nb;}
void iat(Node* &tail,int d){Node* ne=new Node(d);tail->next=ne;tail=ne;}
void iam(Node* &head,Node* &tail,int d,int pos){if(pos==1){iah(head,d);return;}Node* nm=new Node(d);Node* temp=head;int cnt=1;while(cnt<pos-1){temp=temp->next;cnt++;}if(temp->next==NULL){iat(tail,d);return;}nm->next=temp->next;temp->next=nm;}
void dap(int pos,Node* &head,Node* &tail){if(pos==1){Node* dmp=head;head=head->next;dmp->next=NULL;delete dmp;}else{Node* prev=head;Node* curr=head->next;int cnt=1;while(cnt<pos-1){prev=prev->next;curr=curr->next;cnt++;}prev->next=curr->next;if(curr->next==NULL){tail=prev;}curr->next=NULL;delete curr;}}
void print(Node* &head){Node* temp=head;while(temp!=NULL){cout<<temp->data<<" ";temp=temp->next;}cout<<endl;}

Node* rev(Node* &head,Node* prev,Node* curr){    
    //base-case
    if(curr==NULL){
        head=prev;
        return head;
    }
    rev(head,curr,curr->next);
    curr->next=prev;
}

int main(){
    Node* n1=new Node(10);
    Node* head=n1;Node* tail=n1;

    iah(head,12);
    iat(tail,4);
    iam(head,tail,70,4);
    cout<<"Before-reversing:"<<" ";print(head);

    rev(head,NULL,head);
    cout<<"After-reversing:"<<" ";print(head);
}
